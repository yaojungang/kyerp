<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>kyerp3</display-name>
	<!--Spring上下文 配置  -->  
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:conf/spring-core.xml,classpath:conf/spring-security-cas.xml</param-value>
	</context-param>
	<!-- CAS Single Sign Out Filter相关配置放在securityFilter前面-->
	<!-- <filter>
			<filter-name>CAS Single Sign Out Filter</filter-name>
			<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>CAS Single Sign Out Filter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping> -->
	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>
	<!-- Spring Security配置 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/j_spring_security_check</url-pattern>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 自定义的过滤器 -->
	<!-- <filter>
			<filter-name>myDispatcher</filter-name>
			<filter-class>org.kyerp.service.security.impl.MySpecialAuthenticationFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>myDispatcher</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping> -->
	<!--如果不定义webAppRootKey参数，那么webAppRootKey就是缺省的"webapp.root"。但最好设置，以免项目之间的名称冲突。
定义以后，在Web Container启动时将把ROOT的绝对路径写到系统变量里。
然后log4j的配置文件里就可以用${webName.root }来表示Web目录的绝对路径，把log文件存放于webapp中。
此参数用于后面的“Log4jConfigListener”-->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>kyerp3.root</param-value>
	</context-param>
	<!--Log4j配置-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:conf/log4j.properties</param-value>
	</context-param>
	<context-param>   
		<param-name>log4fRefreshInterval</param-name>   
		<param-value>60000</param-value>   
	</context-param>
	<!-- Web 项目 Spring 加载 Log4j 的监听 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- Spring解决 OpenEntityManagerInViewFilter-->
	<filter>
		<filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
		<init-param>
			<param-name>entityManagerFactoryBeanName</param-name>
			<param-value>entityManagerFactory</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Spirng解决乱码 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- Spring Security 控制session-->
	<listener>
		<listener-class>
			org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	<!-- Log4j监听器 -->
	<listener>  
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>   
	</listener>
<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- SpringMVC Dispatcher -->
	<servlet>
		<servlet-name>kyerp3Servlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:conf/spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>kyerp3Servlet</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	<!-- Default to 5 minute session timeouts -->
	<session-config>
		<session-timeout>500</session-timeout>
	</session-config>
	<!-- 配置默认异常处理, 出错页面定义 -->
	<error-page>
		<exception-type>java.lang.Throwablessss</exception-type>
		<location>/WEB-INF/jsp/share/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>505</error-code>
		<location>/WEB-INF/jsp/share/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>409</error-code>
		<location>/WEB-INF/jsp/share/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/WEB-INF/jsp/share/403.jsp</location>
	</error-page>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list> 
</web-app>