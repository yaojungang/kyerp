<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<sec:http entry-point-ref="casProcessingFilterEntryPoint">
		<sec:intercept-url pattern="/install/**" filters="none"/>
		<sec:intercept-url pattern="/login*" filters="none"/>
		<sec:intercept-url pattern="/share/**" filters="none"/>
		<sec:intercept-url pattern="/**" access="ROLE_ADMIN" />		
		<sec:logout invalidate-session="true" logout-url="/logout" logout-success-url="/share/logout.jsp"/>
		<sec:remember-me/>
		<sec:custom-filter ref="casAuthenticationFilter" after="CAS_FILTER" />
		<sec:custom-filter ref="casSingleSignOutFilter" before="LOGOUT_FILTER" />
		<!--sec:custom-filter ref="myFilter" after="LAST" /-->
		<sec:session-management>
			<sec:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</sec:session-management>
	</sec:http>
	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider ref="casAuthenticationProvider" />
	</sec:authentication-manager>

	<!--登陆成功后的处理 -->
	<bean class="org.kyerp.service.security.impl.LoginSuccessListener"/> 
	<!--控制是否把用户信息写入Session -->
	<bean id="securityContextPersistenceFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<property name='securityContextRepository'>
			<bean class='org.springframework.security.web.context.HttpSessionSecurityContextRepository'>
				<property name='allowSessionCreation' value='true' />
			</bean>
		</property>
	</bean>
	<!--自定义的过滤器 -->
	<bean id="myFilter" class="org.kyerp.service.security.impl.MySpecialAuthenticationFilter"></bean>
	<bean id="casSingleSignOutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"></bean> 
	<bean id="casAuthenticationFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
	<bean id="casProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl" value="${cas.baseUrl}${cas.loginUrl}" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>
	
	<bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="userDetailsService" ref="userService" />
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${cas.baseUrl}" />
			</bean>
		</property>
		<property name="key" value="an_id_for_this_auth_provider_only" />
	</bean>

	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service"
			value="${serviceUrl}" />
		<property name="sendRenew" value="false" />
	</bean>
</beans>